name: Deploy

on:
  # Enable manual running of action if necessary
  workflow_dispatch:

jobs:
  deploy_linux:
    name: Bundle Linux AMD64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Bundle
        uses: dtolnay/rust-toolchain@stable
      - run: |
          cargo install cargo-bundle
          cargo bundle --release

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: LinuxAMD64
          path: |
            target/release/bundle/deb/*.deb

  #   deploy_linux_arm:
  #     name: Bundle Linux ARM64
  #     runs-on: ubuntu-24.04-arm
  #     steps:
  #       - name: Checkout code
  #         uses: actions/checkout@v4.2.2

  #       - name: Bundle
  #         uses: dtolnay/rust-toolchain@stable
  #       - run: |
  #           cargo install cargo-bundle
  #           cargo bundle --release

  #       - name: Archive production artifacts
  #         uses: actions/upload-artifact@v4
  #         with:
  #           name: LinuxARM64
  #           path: |
  #             target/release/bundle/deb/*.deb

  deploy_windows:
    name: Bundle Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Bundle
        uses: dtolnay/rust-toolchain@stable
      - run: |
          cargo install cargo-bundle
          cargo bundle --release

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Windows
          path: |
            target/release/bundle/windows/*

  deploy_mac:
    name: Bundle Mac
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Bundle
        uses: dtolnay/rust-toolchain@stable
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      - run: |
          echo $MACOS_CERTIFICATE | base64 -d > certificate.p12
          security create-keychain -p fred build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p fred build.keychain
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k fred build.keychain
          cargo install cargo-bundle
          cargo bundle --release
          /usr/bin/codesign --force -s "Developer ID Application: Fred Clausen (8J9KGJ49RD)" target/release/bundle/osx/*.app -v

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Mac
          path: |
            target/release/bundle/osx/*
