name: Deploy

on:
  # Enable manual running of action if necessary
  workflow_dispatch:

jobs:
  deploy_linux_amd64:
    name: Bundle Linux AMD64
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Bundle
        uses: dtolnay/rust-toolchain@stable
      - run: |
          cargo install cargo-bundle
          cargo bundle --release

      - name: Archive production artifacts debian
        uses: actions/upload-artifact@v4
        with:
          name: LinuxAMD64 Debian
          path: |
            target/release/bundle/deb/*.deb

      - name: Archive production artifacts executable only
        uses: actions/upload-artifact@v4
        with:
          name: LinuxAMD64 Executable
          path: |
            target/release/freminal

  deploy_linux_arm:
    name: Bundle Linux ARM64
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Bundle
        uses: dtolnay/rust-toolchain@stable
      - run: |
          cargo install cargo-bundle
          cargo bundle --release

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: LinuxARM64
          path: |
            target/release/bundle/deb/*.deb

      - name: Archive production artifacts executable only
        uses: actions/upload-artifact@v4
        with:
          name: LinuxARM64 Executable
          path: |
            target/release/freminal

  deploy_windows:
    name: Bundle Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Bundle
        uses: dtolnay/rust-toolchain@stable
      - run: |
          # cargo install cargo-bundle
          # cargo bundle --release
          cargo build --release

      # FIXME: https://github.com/burtonageo/cargo-bundle/issues/77
      # we can't bundle windows yet

      - name: Archive production artifacts executable only
        uses: actions/upload-artifact@v4
        with:
          name: Windows Executable
          path: |
            target/release/freminal.exe

  # deploy_mac:
  #   name: Bundle Mac
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4.2.2

  #     - name: Bundle
  #       uses: dtolnay/rust-toolchain@stable
  #       env:
  #         MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
  #         MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
  #     - run: |
  #         echo $MACOS_CERTIFICATE | base64 -d > certificate.p12
  #         security create-keychain -p fred build.keychain
  #         security default-keychain -s build.keychain
  #         security unlock-keychain -p fred build.keychain
  #         security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
  #         security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k fred build.keychain
  #         cargo install cargo-bundle
  #         cargo bundle --release
  #         /usr/bin/codesign --force -s "Developer ID Application: Fred Clausen (8J9KGJ49RD)" target/release/bundle/osx/*.app -v

  #     - name: Archive production artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: Mac
  #         path: |
  #           target/release/bundle/osx/*
